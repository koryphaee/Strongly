using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Text;

namespace Strongly;

static class EmbeddedSources
{
    static readonly Assembly ThisAssembly = typeof(EmbeddedSources).Assembly;
    const string TemplateNamespace = "Strongly.Templates.";

    public const string ToStringKey = "[TO_STRING]";
    public const string DefaultToString = "Value[?].ToString()";
    public const string NumberStyleKey = "[NUMBER_STYLE]";
    public const string CtorValueKey = "[CTOR_VALUE]";
    public const string CtorKey = "[CTOR]";
    public const string DefaultCtor = "Value = value;";

    internal static readonly string StronglyAttributeSource =
        LoadTemplateForEmitting("StronglyAttribute");

    internal static readonly string StronglyDefaultsAttributeSource =
        LoadTemplateForEmitting("StronglyDefaultsAttribute");

    internal static readonly string StronglyBackingTypeSource =
        LoadTemplateForEmitting("StronglyType");

    internal static readonly string StronglyConverterSource =
        LoadTemplateForEmitting("StronglyConverter");

    internal static readonly string StronglyImplementationsSource =
        LoadTemplateForEmitting("StronglyImplementations");

    static readonly Lazy<string> AutoGeneratedHeader =
        LoadEmbeddedResource("AutoGeneratedHeader");

    internal static readonly Lazy<string> BaseTypeDef = LoadEmbeddedResource("Base.Base_Type");
    internal static readonly Lazy<string> Ctor = LoadEmbeddedResource("Base.Ctor");
    internal static readonly Lazy<string> ImplicitFrom = LoadEmbeddedResource("Base.Implicit_From");
    internal static readonly Lazy<string> ImplicitTo = LoadEmbeddedResource("Base.Implicit_To");
    internal static readonly Lazy<string> ExplicitFrom = LoadEmbeddedResource("Base.Explicit_From");
    internal static readonly Lazy<string> ExplicitTo = LoadEmbeddedResource("Base.Explicit_To");

    internal static readonly Lazy<string> MathConst = LoadEmbeddedResource("Base.Math_Const");
    internal static readonly Lazy<string> MathAddition = LoadEmbeddedResource("Base.Math_Addition");
    internal static readonly Lazy<string> MathDivision = LoadEmbeddedResource("Base.Math_Division");
    internal static readonly Lazy<string> MathNegation = LoadEmbeddedResource("Base.Math_Negation");


    internal static readonly Lazy<string> OperatorsCompare =
        LoadEmbeddedResource("Base.Operators_Compare");

    internal static readonly Lazy<string> MathSubtraction =
        LoadEmbeddedResource("Base.Math_Subtraction");

    internal static readonly Lazy<string> MathMultiplication =
        LoadEmbeddedResource("Base.Math_Multiplication");

    internal static readonly Lazy<string> DefaultEfValueConverter =
        LoadEmbeddedResource("Base.EfValueConverter");

    internal static readonly Lazy<string> DefaultIComparable =
        LoadEmbeddedResource("Base.IComparable");

    internal static readonly Lazy<string> DefaultIFormattable =
        LoadEmbeddedResource("Base.IFormattable");

    internal static readonly Lazy<string> DefaultParsableNumber =
        LoadEmbeddedResource("Base.Parsable_Number");

    internal static readonly ResourceCollection GuidResources = new(
        typeof(Guid).FullName!,
        AutoGeneratedHeader,
        LoadEmbeddedResource("Guid.Guid_Base"),
        LoadEmbeddedResource("Guid.Guid_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Guid.Guid_SystemTextJsonConverter"),
        LoadEmbeddedResource("Guid.Guid_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Guid.Guid_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Guid.Guid_SwaggerSchemaFilter"),
        LoadEmbeddedResource("Guid.Guid_Parsable"),
        DefaultIFormattable,
        LoadEmbeddedResource("Guid.Guid_OperatorsCompare")
    )
    {
        Customizations =
        {
            ["NEW_DEFAULT"] = LoadEmbeddedResource("Guid.New.Guid_New"),
            ["NEW_SEQUENTIAL"] = LoadEmbeddedResource("Guid.New.Guid_New_Sequential"),
            ["NEW_COMB"] = LoadEmbeddedResource("Guid.New.Guid_Comb_New"),
        },
    };

    internal static readonly ResourceCollection IntResources = new(
        "int",
        AutoGeneratedHeader,
        LoadEmbeddedResource("Int.Int_Base"),
        LoadEmbeddedResource("Int.Int_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Int.Int_SystemTextJsonConverter"),
        LoadEmbeddedResource("Int.Int_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Int.Int_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Int.Int_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection UnsignedIntResources = new(
        "uint",
        AutoGeneratedHeader,
        LoadEmbeddedResource("UnsignedInt.UnsignedInt_Base"),
        LoadEmbeddedResource("UnsignedInt.UnsignedInt_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("UnsignedInt.UnsignedInt_SystemTextJsonConverter"),
        LoadEmbeddedResource("UnsignedInt.UnsignedInt_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("UnsignedInt.UnsignedInt_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("UnsignedInt.UnsignedInt_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };

    internal static readonly ResourceCollection LongResources = new(
        "long",
        AutoGeneratedHeader,
        LoadEmbeddedResource("Long.Long_Base"),
        LoadEmbeddedResource("Long.Long_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Long.Long_SystemTextJsonConverter"),
        LoadEmbeddedResource("Long.Long_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Long.Long_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Long.Long_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection UnsignedLongResources = new(
        "ulong",
        AutoGeneratedHeader,
        LoadEmbeddedResource("UnsignedLong.UnsignedLong_Base"),
        LoadEmbeddedResource("UnsignedLong.UnsignedLong_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("UnsignedLong.UnsignedLong_SystemTextJsonConverter"),
        LoadEmbeddedResource("UnsignedLong.UnsignedLong_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("UnsignedLong.UnsignedLong_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("UnsignedLong.UnsignedLong_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection ShortResources = new(
        "short",
        AutoGeneratedHeader,
        LoadEmbeddedResource("Short.Short_Base"),
        LoadEmbeddedResource("Short.Short_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Short.Short_SystemTextJsonConverter"),
        LoadEmbeddedResource("Short.Short_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Short.Short_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Short.Short_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection UnsignedShortResources = new(
        "ushort",
        AutoGeneratedHeader,
        LoadEmbeddedResource("UnsignedShort.UnsignedShort_Base"),
        LoadEmbeddedResource("UnsignedShort.UnsignedShort_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("UnsignedShort.UnsignedShort_SystemTextJsonConverter"),
        LoadEmbeddedResource("UnsignedShort.UnsignedShort_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("UnsignedShort.UnsignedShort_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("UnsignedShort.UnsignedShort_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection ByteResources = new(
        "byte",
        AutoGeneratedHeader,
        LoadEmbeddedResource("Byte.Byte_Base"),
        LoadEmbeddedResource("Byte.Byte_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Byte.Byte_SystemTextJsonConverter"),
        LoadEmbeddedResource("Byte.Byte_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Byte.Byte_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Byte.Byte_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection SignedByteResources = new(
        "sbyte",
        AutoGeneratedHeader,
        LoadEmbeddedResource("SignedByte.SignedByte_Base"),
        LoadEmbeddedResource("SignedByte.SignedByte_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("SignedByte.SignedByte_SystemTextJsonConverter"),
        LoadEmbeddedResource("SignedByte.SignedByte_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("SignedByte.SignedByte_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("SignedByte.SignedByte_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection BigIntegerResources = new(
        "System.Numerics.BigInteger",
        AutoGeneratedHeader,
        LoadEmbeddedResource("BigInteger.BigInteger_Base"),
        LoadEmbeddedResource("BigInteger.BigInteger_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("BigInteger.BigInteger_SystemTextJsonConverter"),
        LoadEmbeddedResource("BigInteger.BigInteger_TypeConverter"),
        LoadEmbeddedResource("BigInteger.BigInteger_EfValueConverter"),
        LoadEmbeddedResource("BigInteger.BigInteger_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("BigInteger.BigInteger_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [ToStringKey] = "Value.ToString(System.Globalization.NumberFormatInfo.InvariantInfo)",
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };

    internal static readonly ResourceCollection NativeIntResources = new(
        "nint",
        AutoGeneratedHeader,
        LoadEmbeddedResource("NativeInt.NativeInt_Base"),
        LoadEmbeddedResource("NativeInt.NativeInt_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("NativeInt.NativeInt_SystemTextJsonConverter"),
        LoadEmbeddedResource("NativeInt.NativeInt_TypeConverter"),
        LoadEmbeddedResource("NativeInt.NativeInt_EfValueConverter"),
        LoadEmbeddedResource("NativeInt.NativeInt_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("NativeInt.NativeInt_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection NativeUnsignedIntResources = new(
        "nuint",
        AutoGeneratedHeader,
        LoadEmbeddedResource("NativeUnsignedInt.NativeUnsignedInt_Base"),
        LoadEmbeddedResource("NativeUnsignedInt.NativeUnsignedInt_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("NativeUnsignedInt.NativeUnsignedInt_SystemTextJsonConverter"),
        LoadEmbeddedResource("NativeUnsignedInt.NativeUnsignedInt_TypeConverter"),
        LoadEmbeddedResource("NativeUnsignedInt.NativeUnsignedInt_EfValueConverter"),
        LoadEmbeddedResource("NativeUnsignedInt.NativeUnsignedInt_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("NativeUnsignedInt.NativeUnsignedInt_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Integer),
        },
    };
    
    internal static readonly ResourceCollection DecimalResources = new(
        "decimal",
        AutoGeneratedHeader,
        LoadEmbeddedResource("Decimal.Decimal_Base"),
        LoadEmbeddedResource("Decimal.Decimal_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Decimal.Decimal_SystemTextJsonConverter"),
        LoadEmbeddedResource("Decimal.Decimal_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Decimal.Decimal_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Double.Double_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Number),
        },
    };

    internal static readonly ResourceCollection DoubleResources = new(
        "double",
        AutoGeneratedHeader,
        LoadEmbeddedResource("Double.Double_Base"),
        LoadEmbeddedResource("Double.Double_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Double.Double_SystemTextJsonConverter"),
        LoadEmbeddedResource("Double.Double_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Double.Double_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Double.Double_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Number),
        },
    };

    internal static readonly ResourceCollection FloatResources = new(
        "float",
        AutoGeneratedHeader,
        LoadEmbeddedResource("Float.Float_Base"),
        LoadEmbeddedResource("Float.Float_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("Float.Float_SystemTextJsonConverter"),
        LoadEmbeddedResource("Float.Float_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("Float.Float_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("Float.Float_SwaggerSchemaFilter"),
        DefaultParsableNumber,
        DefaultIFormattable
    )
    {
        IsNumeric = true,
        TemplateVars =
        {
            [NumberStyleKey] = nameof(NumberStyles.Number),
        },
    };


    internal static readonly ResourceCollection StringResources = new(
        "string",
        AutoGeneratedHeader,
        LoadEmbeddedResource("String.String_Base"),
        LoadEmbeddedResource("String.String_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("String.String_SystemTextJsonConverter"),
        LoadEmbeddedResource("String.String_TypeConverter"),
        DefaultEfValueConverter,
        LoadEmbeddedResource("String.String_DapperTypeHandler"),
        LoadEmbeddedResource("String.String_IComparable"),
        LoadEmbeddedResource("String.String_SwaggerSchemaFilter"),
        LoadEmbeddedResource("String.String_Parsable"),
        LoadEmbeddedResource("String.String_IFormattable")
    )
    {
        TemplateVars =
        {
            [CtorValueKey] =
                "Value = value ?? throw new System.ArgumentNullException(nameof(value));",
        },
    };

    internal static readonly ResourceCollection NullableStringResources = new(
        "string?",
        AutoGeneratedHeader,
        LoadEmbeddedResource("String.String_Base"),
        LoadEmbeddedResource("NullableString.NullableString_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("NullableString.NullableString_SystemTextJsonConverter"),
        LoadEmbeddedResource("NullableString.NullableString_TypeConverter"),
        LoadEmbeddedResource("NullableString.NullableString_EfValueConverter"),
        LoadEmbeddedResource("NullableString.NullableString_DapperTypeHandler"),
        LoadEmbeddedResource("String.String_IComparable"),
        LoadEmbeddedResource("NullableString.NullableString_SwaggerSchemaFilter"),
        LoadEmbeddedResource("NullableString.NullableString_Parsable"),
        LoadEmbeddedResource("String.String_IFormattable")
    )
    {
        NullableEnable = true,
    };

    internal static readonly ResourceCollection NewIdResources = new(
        "MassTransit.NewId",
        AutoGeneratedHeader,
        LoadEmbeddedResource("NewId.NewId_Base"),
        LoadEmbeddedResource("NewId.NewId_NewtonsoftJsonConverter"),
        LoadEmbeddedResource("NewId.NewId_SystemTextJsonConverter"),
        LoadEmbeddedResource("NewId.NewId_TypeConverter"),
        LoadEmbeddedResource("NewId.NewId_EfValueConverter"),
        LoadEmbeddedResource("NewId.NewId_DapperTypeHandler"),
        DefaultIComparable,
        LoadEmbeddedResource("NewId.NewId_SwaggerSchemaFilter"),
        LoadEmbeddedResource("NewId.NewId_Parsable"),
        DefaultIFormattable
    );

    internal const string TypeConverterAttributeSource =
        "    [System.ComponentModel.TypeConverter(typeof(TYPENAMETypeConverter))]";

    internal const string NewtonsoftJsonAttributeSource =
        "    [Newtonsoft.Json.JsonConverter(typeof(TYPENAMENewtonsoftJsonConverter))]";

    internal const string SystemTextJsonAttributeSource =
        "    [System.Text.Json.Serialization.JsonConverter(typeof(TYPENAMESystemTextJsonConverter))]";

    internal const string SwaggerSchemaFilterAttributeSource =
        "    [Swashbuckle.AspNetCore.Annotations.SwaggerSchemaFilter(typeof(TYPENAMESchemaFilter))]";

    internal static Lazy<string> LoadEmbeddedResource(string resourceTemplateName) => new(() =>
    {
        var resourceName = $"{TemplateNamespace}{resourceTemplateName}.cs";
        var resourceStream = ThisAssembly.GetManifestResourceStream(resourceName);
        if (resourceStream is null)
        {
            var existingResources = ThisAssembly.GetManifestResourceNames();
            throw new ArgumentException(
                $"Could not find embedded resource {resourceName}. Available names: {string.Join(", ", existingResources)}");
        }

        using var reader = new StreamReader(resourceStream, Encoding.UTF8);
        return reader.ReadToEnd();
    });

    public readonly record struct ResourceCollection(
        string InternalType,
        Lazy<string> Header,
        Lazy<string> Base,
        Lazy<string> Newtonsoft,
        Lazy<string> SystemTextJson,
        Lazy<string> TypeConverter,
        Lazy<string> EfValueConverter,
        Lazy<string> DapperTypeHandler,
        Lazy<string> Comparable,
        Lazy<string> SwaggerSchemaFilter,
        Lazy<string> Parsable,
        Lazy<string> Formattable,
        Lazy<string>? CompareOperators = null
    )
    {
        public bool IsNumeric { get; init; } = false;
        public bool NullableEnable { get; init; } = false;

        public Dictionary<string, Lazy<string>> Customizations { get; init; } = new();

        // ReSharper disable once CollectionNeverUpdated.Global
        public Dictionary<string, string> TemplateVars { get; init; } = new();
    }

    internal static string LoadTemplateForEmitting(string resourceName)
    {
        var resource = LoadEmbeddedResource($"Sources.{resourceName}");
        return $@"{AutoGeneratedHeader}
#if STRONGLY_TYPED_EMBED_ATTRIBUTES

{resource.Value
    .Replace("public sealed", "internal sealed")
    .Replace("public enum", "internal enum")}
#endif";
    }
}